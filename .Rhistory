getwd()
knitr::opts_chunk$set(echo = TRUE)
health_data <- read.csv("data/raw/healthcare_dataset.csv")
dim(health_data)
colnames(health_data)
## Preview data
```{r preview data}
head(health_data)
dim(health_data)
head(health_data)
summary(health_data)
colSums(is.na(health_data))
str(health_data)
library(dplyr)
library(lubridate)
health_data_clean <- health_data %>%
# 1. Fix case inconsistencies for Name and Gender (capitalize properly)
mutate(
Name = tools::toTitleCase(tolower(Name)),
Gender = case_when(
tolower(Gender) %in% c("male", "m") ~ "Male",
tolower(Gender) %in% c("female", "f") ~ "Female",
TRUE ~ Gender
)
) %>%
# 2. Convert relevent character columns to factors
mutate(
Gender = as.factor(Gender),
Blood.Type = as.factor(Blood.Type),
Medical.Condition = as.factor(Medical.Condition),
Doctor = as.factor(Doctor),
Hospital = as.factor(Hospital),
Insurance.Provider = as.factor(Insurance.Provider),
Admission.Type = as.factor(Admission.Type),
Medication = as.factor(Medication),
Test.Results = as.factor(Test.Results)
) %>%
# 3. Convert Date columns to Date type
mutate(
Date.of.Admission = as.Date(Date.of.Admission, format = "%Y-%m-%d"),
Discharge.Date = as.Date(Discharge.Date, format = "%Y-%m-%d")
) %>%
# 4. Remove duplicates if any
distinct()
# 5. Check for missing values again
colSums(is.na(health_data_clean))
health_data_clean <- health_data_clean %>%
mutate(Length.of.Stay = as.numeric(Discharge.Date - Date.of.Admission))
health_data_clean <- health_data_clean %>%
mutate(Age.Group = cut(Age,
breaks = c(0, 18, 35, 50, 65, Inf),
labels = c("Child", "Young Adult", "Adult", "Senior Adult", "Elderly")))
colnames(health_data_clean)
summary(health_data_clean$Length.of.Stay)
summary(health_data_clean$Age.Group)
write.csv(health_data_clean, "data/processed/health_data_clean.csv", row.names = FALSE)
### Find names with more than one unique gender
```{r find duplicate gender}
knitr::opts_chunk$set(echo = TRUE)
health_data <- read.csv("data/raw/healthcare_dataset.csv")
dim(health_data)
colnames(health_data)
```{r preview data}
conflicting_gender <- health_data %>%
group_by(Name) %>%
summarize(gender_count = n_distinct(tolower(Gender))) %>%
filter(gender_count > 1)
head(conflicting_gender)
conflicting_gender <- conflicting_gender$Name
length(conflicting_gender_names)
conflicting_gender_names <- conflicting_gender$Name
conflicting_gender <- health_data %>%
group_by(Name) %>%
summarize(gender_count = n_distinct(tolower(Gender))) %>%
filter(gender_count > 1)
conflicting_gender_names <- conflicting_gender$Name
head(conflicting_gender)
conflicting_gender_names <- conflicting_gender$Name
length(conflicting_gender_names)
head(conflicting_gender_names, 10)
gender_fix <- health_data_clean %>%
group_by(Name, Gender) %>%
summarize(count = n(), .groups = "drop") %>%
group_by(Name) %>%
slice_max(count, n = 1, with_ties = FALSE) %>%
select(Name, Gender)
gender_fix <- health_data_clean %>%
group_by(Name, Gender) %>%
summarize(count = n(), .groups = "drop") %>%
group_by(Name) %>%
slice_max(count, n = 1, with_ties = FALSE) %>%
select(Name, Gender)
health_data_clean <- health_data_clean %>%
select(-Gender) %>%
left_join(gender_fix, by = "Name")
head(health_data_clean)
